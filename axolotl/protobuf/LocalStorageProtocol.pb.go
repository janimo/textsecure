// Code generated by protoc-gen-go.
// source: LocalStorageProtocol.proto
// DO NOT EDIT!

package textsecure

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SessionStructure struct {
	SessionVersion       *uint32                              `protobuf:"varint,1,opt,name=sessionVersion" json:"sessionVersion,omitempty"`
	LocalIdentityPublic  []byte                               `protobuf:"bytes,2,opt,name=localIdentityPublic" json:"localIdentityPublic,omitempty"`
	RemoteIdentityPublic []byte                               `protobuf:"bytes,3,opt,name=remoteIdentityPublic" json:"remoteIdentityPublic,omitempty"`
	RootKey              []byte                               `protobuf:"bytes,4,opt,name=rootKey" json:"rootKey,omitempty"`
	PreviousCounter      *uint32                              `protobuf:"varint,5,opt,name=previousCounter" json:"previousCounter,omitempty"`
	SenderChain          *SessionStructure_Chain              `protobuf:"bytes,6,opt,name=senderChain" json:"senderChain,omitempty"`
	ReceiverChains       []*SessionStructure_Chain            `protobuf:"bytes,7,rep,name=receiverChains" json:"receiverChains,omitempty"`
	PendingKeyExchange   *SessionStructure_PendingKeyExchange `protobuf:"bytes,8,opt,name=pendingKeyExchange" json:"pendingKeyExchange,omitempty"`
	PendingPreKey        *SessionStructure_PendingPreKey      `protobuf:"bytes,9,opt,name=pendingPreKey" json:"pendingPreKey,omitempty"`
	RemoteRegistrationId *uint32                              `protobuf:"varint,10,opt,name=remoteRegistrationId" json:"remoteRegistrationId,omitempty"`
	LocalRegistrationId  *uint32                              `protobuf:"varint,11,opt,name=localRegistrationId" json:"localRegistrationId,omitempty"`
	NeedsRefresh         *bool                                `protobuf:"varint,12,opt,name=needsRefresh" json:"needsRefresh,omitempty"`
	AliceBaseKey         []byte                               `protobuf:"bytes,13,opt,name=aliceBaseKey" json:"aliceBaseKey,omitempty"`
	XXX_unrecognized     []byte                               `json:"-"`
}

func (m *SessionStructure) Reset()                    { *m = SessionStructure{} }
func (m *SessionStructure) String() string            { return proto.CompactTextString(m) }
func (*SessionStructure) ProtoMessage()               {}
func (*SessionStructure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SessionStructure) GetSessionVersion() uint32 {
	if m != nil && m.SessionVersion != nil {
		return *m.SessionVersion
	}
	return 0
}

func (m *SessionStructure) GetLocalIdentityPublic() []byte {
	if m != nil {
		return m.LocalIdentityPublic
	}
	return nil
}

func (m *SessionStructure) GetRemoteIdentityPublic() []byte {
	if m != nil {
		return m.RemoteIdentityPublic
	}
	return nil
}

func (m *SessionStructure) GetRootKey() []byte {
	if m != nil {
		return m.RootKey
	}
	return nil
}

func (m *SessionStructure) GetPreviousCounter() uint32 {
	if m != nil && m.PreviousCounter != nil {
		return *m.PreviousCounter
	}
	return 0
}

func (m *SessionStructure) GetSenderChain() *SessionStructure_Chain {
	if m != nil {
		return m.SenderChain
	}
	return nil
}

func (m *SessionStructure) GetReceiverChains() []*SessionStructure_Chain {
	if m != nil {
		return m.ReceiverChains
	}
	return nil
}

func (m *SessionStructure) GetPendingKeyExchange() *SessionStructure_PendingKeyExchange {
	if m != nil {
		return m.PendingKeyExchange
	}
	return nil
}

func (m *SessionStructure) GetPendingPreKey() *SessionStructure_PendingPreKey {
	if m != nil {
		return m.PendingPreKey
	}
	return nil
}

func (m *SessionStructure) GetRemoteRegistrationId() uint32 {
	if m != nil && m.RemoteRegistrationId != nil {
		return *m.RemoteRegistrationId
	}
	return 0
}

func (m *SessionStructure) GetLocalRegistrationId() uint32 {
	if m != nil && m.LocalRegistrationId != nil {
		return *m.LocalRegistrationId
	}
	return 0
}

func (m *SessionStructure) GetNeedsRefresh() bool {
	if m != nil && m.NeedsRefresh != nil {
		return *m.NeedsRefresh
	}
	return false
}

func (m *SessionStructure) GetAliceBaseKey() []byte {
	if m != nil {
		return m.AliceBaseKey
	}
	return nil
}

type SessionStructure_Chain struct {
	SenderRatchetKey        []byte                               `protobuf:"bytes,1,opt,name=senderRatchetKey" json:"senderRatchetKey,omitempty"`
	SenderRatchetKeyPrivate []byte                               `protobuf:"bytes,2,opt,name=senderRatchetKeyPrivate" json:"senderRatchetKeyPrivate,omitempty"`
	ChainKey                *SessionStructure_Chain_ChainKey     `protobuf:"bytes,3,opt,name=chainKey" json:"chainKey,omitempty"`
	MessageKeys             []*SessionStructure_Chain_MessageKey `protobuf:"bytes,4,rep,name=messageKeys" json:"messageKeys,omitempty"`
	XXX_unrecognized        []byte                               `json:"-"`
}

func (m *SessionStructure_Chain) Reset()                    { *m = SessionStructure_Chain{} }
func (m *SessionStructure_Chain) String() string            { return proto.CompactTextString(m) }
func (*SessionStructure_Chain) ProtoMessage()               {}
func (*SessionStructure_Chain) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *SessionStructure_Chain) GetSenderRatchetKey() []byte {
	if m != nil {
		return m.SenderRatchetKey
	}
	return nil
}

func (m *SessionStructure_Chain) GetSenderRatchetKeyPrivate() []byte {
	if m != nil {
		return m.SenderRatchetKeyPrivate
	}
	return nil
}

func (m *SessionStructure_Chain) GetChainKey() *SessionStructure_Chain_ChainKey {
	if m != nil {
		return m.ChainKey
	}
	return nil
}

func (m *SessionStructure_Chain) GetMessageKeys() []*SessionStructure_Chain_MessageKey {
	if m != nil {
		return m.MessageKeys
	}
	return nil
}

type SessionStructure_Chain_ChainKey struct {
	Index            *uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Key              []byte  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionStructure_Chain_ChainKey) Reset()         { *m = SessionStructure_Chain_ChainKey{} }
func (m *SessionStructure_Chain_ChainKey) String() string { return proto.CompactTextString(m) }
func (*SessionStructure_Chain_ChainKey) ProtoMessage()    {}
func (*SessionStructure_Chain_ChainKey) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0, 0}
}

func (m *SessionStructure_Chain_ChainKey) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *SessionStructure_Chain_ChainKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type SessionStructure_Chain_MessageKey struct {
	Index            *uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	CipherKey        []byte  `protobuf:"bytes,2,opt,name=cipherKey" json:"cipherKey,omitempty"`
	MacKey           []byte  `protobuf:"bytes,3,opt,name=macKey" json:"macKey,omitempty"`
	Iv               []byte  `protobuf:"bytes,4,opt,name=iv" json:"iv,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionStructure_Chain_MessageKey) Reset()         { *m = SessionStructure_Chain_MessageKey{} }
func (m *SessionStructure_Chain_MessageKey) String() string { return proto.CompactTextString(m) }
func (*SessionStructure_Chain_MessageKey) ProtoMessage()    {}
func (*SessionStructure_Chain_MessageKey) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0, 1}
}

func (m *SessionStructure_Chain_MessageKey) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *SessionStructure_Chain_MessageKey) GetCipherKey() []byte {
	if m != nil {
		return m.CipherKey
	}
	return nil
}

func (m *SessionStructure_Chain_MessageKey) GetMacKey() []byte {
	if m != nil {
		return m.MacKey
	}
	return nil
}

func (m *SessionStructure_Chain_MessageKey) GetIv() []byte {
	if m != nil {
		return m.Iv
	}
	return nil
}

type SessionStructure_PendingKeyExchange struct {
	Sequence                *uint32 `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	LocalBaseKey            []byte  `protobuf:"bytes,2,opt,name=localBaseKey" json:"localBaseKey,omitempty"`
	LocalBaseKeyPrivate     []byte  `protobuf:"bytes,3,opt,name=localBaseKeyPrivate" json:"localBaseKeyPrivate,omitempty"`
	LocalRatchetKey         []byte  `protobuf:"bytes,4,opt,name=localRatchetKey" json:"localRatchetKey,omitempty"`
	LocalRatchetKeyPrivate  []byte  `protobuf:"bytes,5,opt,name=localRatchetKeyPrivate" json:"localRatchetKeyPrivate,omitempty"`
	LocalIdentityKey        []byte  `protobuf:"bytes,7,opt,name=localIdentityKey" json:"localIdentityKey,omitempty"`
	LocalIdentityKeyPrivate []byte  `protobuf:"bytes,8,opt,name=localIdentityKeyPrivate" json:"localIdentityKeyPrivate,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *SessionStructure_PendingKeyExchange) Reset()         { *m = SessionStructure_PendingKeyExchange{} }
func (m *SessionStructure_PendingKeyExchange) String() string { return proto.CompactTextString(m) }
func (*SessionStructure_PendingKeyExchange) ProtoMessage()    {}
func (*SessionStructure_PendingKeyExchange) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 1}
}

func (m *SessionStructure_PendingKeyExchange) GetSequence() uint32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *SessionStructure_PendingKeyExchange) GetLocalBaseKey() []byte {
	if m != nil {
		return m.LocalBaseKey
	}
	return nil
}

func (m *SessionStructure_PendingKeyExchange) GetLocalBaseKeyPrivate() []byte {
	if m != nil {
		return m.LocalBaseKeyPrivate
	}
	return nil
}

func (m *SessionStructure_PendingKeyExchange) GetLocalRatchetKey() []byte {
	if m != nil {
		return m.LocalRatchetKey
	}
	return nil
}

func (m *SessionStructure_PendingKeyExchange) GetLocalRatchetKeyPrivate() []byte {
	if m != nil {
		return m.LocalRatchetKeyPrivate
	}
	return nil
}

func (m *SessionStructure_PendingKeyExchange) GetLocalIdentityKey() []byte {
	if m != nil {
		return m.LocalIdentityKey
	}
	return nil
}

func (m *SessionStructure_PendingKeyExchange) GetLocalIdentityKeyPrivate() []byte {
	if m != nil {
		return m.LocalIdentityKeyPrivate
	}
	return nil
}

type SessionStructure_PendingPreKey struct {
	PreKeyId         *uint32 `protobuf:"varint,1,opt,name=preKeyId" json:"preKeyId,omitempty"`
	SignedPreKeyId   *int32  `protobuf:"varint,3,opt,name=signedPreKeyId" json:"signedPreKeyId,omitempty"`
	BaseKey          []byte  `protobuf:"bytes,2,opt,name=baseKey" json:"baseKey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionStructure_PendingPreKey) Reset()         { *m = SessionStructure_PendingPreKey{} }
func (m *SessionStructure_PendingPreKey) String() string { return proto.CompactTextString(m) }
func (*SessionStructure_PendingPreKey) ProtoMessage()    {}
func (*SessionStructure_PendingPreKey) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 2}
}

func (m *SessionStructure_PendingPreKey) GetPreKeyId() uint32 {
	if m != nil && m.PreKeyId != nil {
		return *m.PreKeyId
	}
	return 0
}

func (m *SessionStructure_PendingPreKey) GetSignedPreKeyId() int32 {
	if m != nil && m.SignedPreKeyId != nil {
		return *m.SignedPreKeyId
	}
	return 0
}

func (m *SessionStructure_PendingPreKey) GetBaseKey() []byte {
	if m != nil {
		return m.BaseKey
	}
	return nil
}

type RecordStructure struct {
	CurrentSession   *SessionStructure   `protobuf:"bytes,1,opt,name=currentSession" json:"currentSession,omitempty"`
	PreviousSessions []*SessionStructure `protobuf:"bytes,2,rep,name=previousSessions" json:"previousSessions,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RecordStructure) Reset()                    { *m = RecordStructure{} }
func (m *RecordStructure) String() string            { return proto.CompactTextString(m) }
func (*RecordStructure) ProtoMessage()               {}
func (*RecordStructure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *RecordStructure) GetCurrentSession() *SessionStructure {
	if m != nil {
		return m.CurrentSession
	}
	return nil
}

func (m *RecordStructure) GetPreviousSessions() []*SessionStructure {
	if m != nil {
		return m.PreviousSessions
	}
	return nil
}

type PreKeyRecordStructure struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PublicKey        []byte  `protobuf:"bytes,2,opt,name=publicKey" json:"publicKey,omitempty"`
	PrivateKey       []byte  `protobuf:"bytes,3,opt,name=privateKey" json:"privateKey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PreKeyRecordStructure) Reset()                    { *m = PreKeyRecordStructure{} }
func (m *PreKeyRecordStructure) String() string            { return proto.CompactTextString(m) }
func (*PreKeyRecordStructure) ProtoMessage()               {}
func (*PreKeyRecordStructure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *PreKeyRecordStructure) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PreKeyRecordStructure) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *PreKeyRecordStructure) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type SignedPreKeyRecordStructure struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PublicKey        []byte  `protobuf:"bytes,2,opt,name=publicKey" json:"publicKey,omitempty"`
	PrivateKey       []byte  `protobuf:"bytes,3,opt,name=privateKey" json:"privateKey,omitempty"`
	Signature        []byte  `protobuf:"bytes,4,opt,name=signature" json:"signature,omitempty"`
	Timestamp        *uint64 `protobuf:"fixed64,5,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SignedPreKeyRecordStructure) Reset()                    { *m = SignedPreKeyRecordStructure{} }
func (m *SignedPreKeyRecordStructure) String() string            { return proto.CompactTextString(m) }
func (*SignedPreKeyRecordStructure) ProtoMessage()               {}
func (*SignedPreKeyRecordStructure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *SignedPreKeyRecordStructure) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SignedPreKeyRecordStructure) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *SignedPreKeyRecordStructure) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *SignedPreKeyRecordStructure) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedPreKeyRecordStructure) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type IdentityKeyPairStructure struct {
	PublicKey        []byte `protobuf:"bytes,1,opt,name=publicKey" json:"publicKey,omitempty"`
	PrivateKey       []byte `protobuf:"bytes,2,opt,name=privateKey" json:"privateKey,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IdentityKeyPairStructure) Reset()                    { *m = IdentityKeyPairStructure{} }
func (m *IdentityKeyPairStructure) String() string            { return proto.CompactTextString(m) }
func (*IdentityKeyPairStructure) ProtoMessage()               {}
func (*IdentityKeyPairStructure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *IdentityKeyPairStructure) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *IdentityKeyPairStructure) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type SenderKeyStateStructure struct {
	SenderKeyId       *uint32                                     `protobuf:"varint,1,opt,name=senderKeyId" json:"senderKeyId,omitempty"`
	SenderChainKey    *SenderKeyStateStructure_SenderChainKey     `protobuf:"bytes,2,opt,name=senderChainKey" json:"senderChainKey,omitempty"`
	SenderSigningKey  *SenderKeyStateStructure_SenderSigningKey   `protobuf:"bytes,3,opt,name=senderSigningKey" json:"senderSigningKey,omitempty"`
	SenderMessageKeys []*SenderKeyStateStructure_SenderMessageKey `protobuf:"bytes,4,rep,name=senderMessageKeys" json:"senderMessageKeys,omitempty"`
	XXX_unrecognized  []byte                                      `json:"-"`
}

func (m *SenderKeyStateStructure) Reset()                    { *m = SenderKeyStateStructure{} }
func (m *SenderKeyStateStructure) String() string            { return proto.CompactTextString(m) }
func (*SenderKeyStateStructure) ProtoMessage()               {}
func (*SenderKeyStateStructure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SenderKeyStateStructure) GetSenderKeyId() uint32 {
	if m != nil && m.SenderKeyId != nil {
		return *m.SenderKeyId
	}
	return 0
}

func (m *SenderKeyStateStructure) GetSenderChainKey() *SenderKeyStateStructure_SenderChainKey {
	if m != nil {
		return m.SenderChainKey
	}
	return nil
}

func (m *SenderKeyStateStructure) GetSenderSigningKey() *SenderKeyStateStructure_SenderSigningKey {
	if m != nil {
		return m.SenderSigningKey
	}
	return nil
}

func (m *SenderKeyStateStructure) GetSenderMessageKeys() []*SenderKeyStateStructure_SenderMessageKey {
	if m != nil {
		return m.SenderMessageKeys
	}
	return nil
}

type SenderKeyStateStructure_SenderChainKey struct {
	Iteration        *uint32 `protobuf:"varint,1,opt,name=iteration" json:"iteration,omitempty"`
	Seed             []byte  `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SenderKeyStateStructure_SenderChainKey) Reset() {
	*m = SenderKeyStateStructure_SenderChainKey{}
}
func (m *SenderKeyStateStructure_SenderChainKey) String() string { return proto.CompactTextString(m) }
func (*SenderKeyStateStructure_SenderChainKey) ProtoMessage()    {}
func (*SenderKeyStateStructure_SenderChainKey) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5, 0}
}

func (m *SenderKeyStateStructure_SenderChainKey) GetIteration() uint32 {
	if m != nil && m.Iteration != nil {
		return *m.Iteration
	}
	return 0
}

func (m *SenderKeyStateStructure_SenderChainKey) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

type SenderKeyStateStructure_SenderMessageKey struct {
	Iteration        *uint32 `protobuf:"varint,1,opt,name=iteration" json:"iteration,omitempty"`
	Seed             []byte  `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SenderKeyStateStructure_SenderMessageKey) Reset() {
	*m = SenderKeyStateStructure_SenderMessageKey{}
}
func (m *SenderKeyStateStructure_SenderMessageKey) String() string { return proto.CompactTextString(m) }
func (*SenderKeyStateStructure_SenderMessageKey) ProtoMessage()    {}
func (*SenderKeyStateStructure_SenderMessageKey) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5, 1}
}

func (m *SenderKeyStateStructure_SenderMessageKey) GetIteration() uint32 {
	if m != nil && m.Iteration != nil {
		return *m.Iteration
	}
	return 0
}

func (m *SenderKeyStateStructure_SenderMessageKey) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

type SenderKeyStateStructure_SenderSigningKey struct {
	Public           []byte `protobuf:"bytes,1,opt,name=public" json:"public,omitempty"`
	Private          []byte `protobuf:"bytes,2,opt,name=private" json:"private,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SenderKeyStateStructure_SenderSigningKey) Reset() {
	*m = SenderKeyStateStructure_SenderSigningKey{}
}
func (m *SenderKeyStateStructure_SenderSigningKey) String() string { return proto.CompactTextString(m) }
func (*SenderKeyStateStructure_SenderSigningKey) ProtoMessage()    {}
func (*SenderKeyStateStructure_SenderSigningKey) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5, 2}
}

func (m *SenderKeyStateStructure_SenderSigningKey) GetPublic() []byte {
	if m != nil {
		return m.Public
	}
	return nil
}

func (m *SenderKeyStateStructure_SenderSigningKey) GetPrivate() []byte {
	if m != nil {
		return m.Private
	}
	return nil
}

type SenderKeyRecordStructure struct {
	SenderKeyStates  []*SenderKeyStateStructure `protobuf:"bytes,1,rep,name=senderKeyStates" json:"senderKeyStates,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *SenderKeyRecordStructure) Reset()                    { *m = SenderKeyRecordStructure{} }
func (m *SenderKeyRecordStructure) String() string            { return proto.CompactTextString(m) }
func (*SenderKeyRecordStructure) ProtoMessage()               {}
func (*SenderKeyRecordStructure) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *SenderKeyRecordStructure) GetSenderKeyStates() []*SenderKeyStateStructure {
	if m != nil {
		return m.SenderKeyStates
	}
	return nil
}

func init() {
	proto.RegisterType((*SessionStructure)(nil), "textsecure.SessionStructure")
	proto.RegisterType((*SessionStructure_Chain)(nil), "textsecure.SessionStructure.Chain")
	proto.RegisterType((*SessionStructure_Chain_ChainKey)(nil), "textsecure.SessionStructure.Chain.ChainKey")
	proto.RegisterType((*SessionStructure_Chain_MessageKey)(nil), "textsecure.SessionStructure.Chain.MessageKey")
	proto.RegisterType((*SessionStructure_PendingKeyExchange)(nil), "textsecure.SessionStructure.PendingKeyExchange")
	proto.RegisterType((*SessionStructure_PendingPreKey)(nil), "textsecure.SessionStructure.PendingPreKey")
	proto.RegisterType((*RecordStructure)(nil), "textsecure.RecordStructure")
	proto.RegisterType((*PreKeyRecordStructure)(nil), "textsecure.PreKeyRecordStructure")
	proto.RegisterType((*SignedPreKeyRecordStructure)(nil), "textsecure.SignedPreKeyRecordStructure")
	proto.RegisterType((*IdentityKeyPairStructure)(nil), "textsecure.IdentityKeyPairStructure")
	proto.RegisterType((*SenderKeyStateStructure)(nil), "textsecure.SenderKeyStateStructure")
	proto.RegisterType((*SenderKeyStateStructure_SenderChainKey)(nil), "textsecure.SenderKeyStateStructure.SenderChainKey")
	proto.RegisterType((*SenderKeyStateStructure_SenderMessageKey)(nil), "textsecure.SenderKeyStateStructure.SenderMessageKey")
	proto.RegisterType((*SenderKeyStateStructure_SenderSigningKey)(nil), "textsecure.SenderKeyStateStructure.SenderSigningKey")
	proto.RegisterType((*SenderKeyRecordStructure)(nil), "textsecure.SenderKeyRecordStructure")
}

func init() { proto.RegisterFile("LocalStorageProtocol.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 951 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0x2b, 0x35,
	0x17, 0xd5, 0x24, 0x4d, 0x9b, 0xb3, 0xf3, 0xd3, 0x7e, 0xfe, 0x0e, 0x3d, 0xa3, 0xe1, 0x08, 0x45,
	0x83, 0x84, 0xa2, 0x83, 0x08, 0x28, 0x20, 0xc4, 0x75, 0x4f, 0x11, 0x94, 0x52, 0x11, 0x39, 0x12,
	0x42, 0xdc, 0xc0, 0x74, 0x66, 0x93, 0x58, 0x24, 0x33, 0x83, 0xed, 0x84, 0xe6, 0x71, 0xb8, 0x40,
	0x5c, 0xf1, 0x0c, 0xbc, 0x01, 0xcf, 0x84, 0xec, 0xb1, 0xe7, 0xc7, 0x49, 0x4b, 0x10, 0xe2, 0x26,
	0x19, 0x2f, 0x7b, 0xaf, 0xed, 0x59, 0x7b, 0x79, 0x7b, 0x20, 0xf8, 0x32, 0x8b, 0xa3, 0xd5, 0x5c,
	0x66, 0x3c, 0x5a, 0xe0, 0x8c, 0x67, 0x32, 0x8b, 0xb3, 0xd5, 0x24, 0x57, 0x0f, 0x04, 0x24, 0x3e,
	0x48, 0x81, 0xf1, 0x86, 0x63, 0xf8, 0x47, 0x1f, 0x2e, 0xe6, 0x28, 0x04, 0xcb, 0xd2, 0xb9, 0xe4,
	0x9b, 0x58, 0x6e, 0x38, 0x92, 0x77, 0x60, 0x28, 0x0a, 0xec, 0x6b, 0xe4, 0xea, 0xcf, 0xf7, 0x46,
	0xde, 0x78, 0x40, 0x1d, 0x94, 0x7c, 0x00, 0xff, 0x5f, 0xa9, 0x34, 0x37, 0x09, 0xa6, 0x92, 0xc9,
	0xdd, 0x6c, 0x73, 0xbf, 0x62, 0xb1, 0xdf, 0x1a, 0x79, 0xe3, 0x3e, 0x3d, 0x34, 0x45, 0xa6, 0xf0,
	0x9c, 0xe3, 0x3a, 0x93, 0xe8, 0x84, 0xb4, 0x75, 0xc8, 0xc1, 0x39, 0xe2, 0xc3, 0x19, 0xcf, 0x32,
	0x79, 0x8b, 0x3b, 0xff, 0x44, 0x2f, 0xb3, 0x43, 0x32, 0x86, 0xf3, 0x9c, 0xe3, 0x96, 0x65, 0x1b,
	0xf1, 0x3a, 0xdb, 0xa4, 0x12, 0xb9, 0xdf, 0xd1, 0x1b, 0x75, 0x61, 0x72, 0x0d, 0x3d, 0x81, 0x69,
	0x82, 0xfc, 0xf5, 0x32, 0x62, 0xa9, 0x7f, 0x3a, 0xf2, 0xc6, 0xbd, 0x69, 0x38, 0xa9, 0x84, 0x98,
	0xb8, 0x22, 0x4c, 0xf4, 0x4a, 0x5a, 0x0f, 0x23, 0x5f, 0xc0, 0x90, 0x63, 0x8c, 0x6c, 0x6b, 0x00,
	0xe1, 0x9f, 0x8d, 0xda, 0x47, 0x12, 0x39, 0x91, 0xe4, 0x3b, 0x20, 0x39, 0xa6, 0x09, 0x4b, 0x17,
	0xb7, 0xb8, 0xfb, 0xf4, 0x21, 0x5e, 0x46, 0xe9, 0x02, 0xfd, 0xae, 0xde, 0xd8, 0xfb, 0x4f, 0xf2,
	0xcd, 0xf6, 0xc2, 0xe8, 0x01, 0x2a, 0x32, 0x83, 0x81, 0x41, 0x67, 0x1c, 0x95, 0x78, 0xcf, 0x34,
	0xf7, 0xab, 0x63, 0xb8, 0x8b, 0x08, 0xda, 0x24, 0xa8, 0x8a, 0x47, 0x71, 0xc1, 0x84, 0xe4, 0x91,
	0x64, 0x59, 0x7a, 0x93, 0xf8, 0xa0, 0x35, 0x3f, 0x38, 0x57, 0x5a, 0xc4, 0x09, 0xe9, 0xe9, 0x90,
	0x43, 0x53, 0x24, 0x84, 0x7e, 0x8a, 0x98, 0x08, 0x8a, 0x3f, 0x70, 0x14, 0x4b, 0xbf, 0x3f, 0xf2,
	0xc6, 0x5d, 0xda, 0xc0, 0xd4, 0x9a, 0x68, 0xc5, 0x62, 0xbc, 0x8a, 0x84, 0x7e, 0xb5, 0x81, 0xf6,
	0x45, 0x03, 0x0b, 0x7e, 0x6d, 0x43, 0xa7, 0x28, 0xdb, 0x2b, 0xb8, 0x28, 0xaa, 0x48, 0x23, 0x19,
	0x2f, 0x51, 0x3b, 0xc9, 0xd3, 0x11, 0x7b, 0x38, 0xf9, 0x04, 0x5e, 0xb8, 0xd8, 0x8c, 0xb3, 0x6d,
	0x24, 0xd1, 0xd8, 0xfa, 0xb1, 0x69, 0xf2, 0x19, 0x74, 0x63, 0x95, 0x4e, 0xb1, 0xb7, 0xb5, 0xd4,
	0xef, 0xfe, 0xbd, 0x2d, 0x8a, 0x5f, 0xa5, 0x75, 0x19, 0x4c, 0xbe, 0x82, 0xde, 0x1a, 0x85, 0x88,
	0x16, 0xea, 0x35, 0x84, 0x7f, 0xa2, 0x2d, 0xf6, 0xde, 0x11, 0x5c, 0x77, 0x65, 0x14, 0xad, 0x33,
	0x04, 0x53, 0xe8, 0xda, 0x34, 0xe4, 0x39, 0x74, 0x58, 0x9a, 0xe0, 0x83, 0x39, 0xd1, 0xc5, 0x80,
	0x5c, 0x40, 0xfb, 0x47, 0xdc, 0x99, 0x37, 0x54, 0x8f, 0xc1, 0x12, 0xa0, 0xa2, 0x7b, 0x24, 0xea,
	0x25, 0x3c, 0x8b, 0x59, 0xbe, 0x44, 0x7e, 0x5b, 0xc6, 0x56, 0x00, 0xb9, 0x84, 0xd3, 0x75, 0x14,
	0x5b, 0x35, 0xfa, 0xd4, 0x8c, 0xc8, 0x10, 0x5a, 0x6c, 0x6b, 0x4e, 0x72, 0x8b, 0x6d, 0x83, 0x3f,
	0x5b, 0x40, 0xf6, 0x2d, 0x4d, 0x02, 0xe8, 0x0a, 0xfc, 0x69, 0x83, 0x69, 0x8c, 0x26, 0x6b, 0x39,
	0x56, 0xe5, 0xd7, 0xce, 0xb1, 0xe5, 0x2f, 0x72, 0x37, 0xb0, 0xd2, 0x78, 0x66, 0x6c, 0x8b, 0xd8,
	0xae, 0xf5, 0xa6, 0xe6, 0x94, 0xea, 0x26, 0x85, 0x1f, 0x2b, 0x97, 0x14, 0xbb, 0x74, 0x61, 0xf2,
	0x31, 0x5c, 0x3a, 0x90, 0xa5, 0xef, 0xe8, 0x80, 0x47, 0x66, 0x95, 0x11, 0x1b, 0x4d, 0x51, 0xa5,
	0x38, 0x2b, 0x8c, 0xe8, 0xe2, 0xca, 0x88, 0x2e, 0x66, 0x93, 0x74, 0x0b, 0x23, 0x3e, 0x32, 0x1d,
	0xac, 0x61, 0xd0, 0x38, 0xc6, 0x4a, 0xca, 0x5c, 0x3f, 0xdd, 0x24, 0x56, 0x4a, 0x3b, 0xd6, 0xad,
	0x9e, 0x2d, 0x52, 0x4c, 0x66, 0x76, 0x85, 0x52, 0xa8, 0x43, 0x1d, 0x54, 0x35, 0xe1, 0xfb, 0x86,
	0xda, 0x76, 0x18, 0xfe, 0xe2, 0xc1, 0x39, 0xc5, 0x38, 0xe3, 0x49, 0x75, 0x81, 0x5c, 0xc3, 0x30,
	0xde, 0x70, 0x8e, 0xa9, 0x34, 0x56, 0xd5, 0x79, 0x7b, 0xd3, 0x97, 0x4f, 0xb9, 0x98, 0x3a, 0x31,
	0xe4, 0x73, 0xb8, 0xb0, 0x7d, 0xdc, 0x40, 0xc2, 0x6f, 0xe9, 0xd3, 0xf0, 0x34, 0xcf, 0x5e, 0x54,
	0x88, 0xf0, 0x86, 0x69, 0x69, 0xce, 0x46, 0x95, 0x19, 0xad, 0x28, 0x2d, 0x96, 0x28, 0x4b, 0xe7,
	0xfa, 0xd6, 0xa9, 0x59, 0xba, 0x04, 0xc8, 0x5b, 0x00, 0x79, 0x21, 0x72, 0x65, 0xeb, 0x1a, 0x12,
	0xfe, 0xe6, 0xc1, 0x9b, 0xf3, 0x9a, 0x6e, 0xff, 0x69, 0x36, 0x15, 0xad, 0x8a, 0x14, 0x29, 0x6a,
	0xe3, 0xd4, 0x0a, 0x50, 0xb3, 0x92, 0xad, 0x51, 0xc8, 0x68, 0x9d, 0x6b, 0x5b, 0x9e, 0xd2, 0x0a,
	0x08, 0xbf, 0x01, 0xbf, 0xee, 0x9c, 0x88, 0xf1, 0x6a, 0x97, 0x8d, 0x5d, 0x79, 0x4f, 0xef, 0xaa,
	0xb5, 0xa7, 0xc1, 0xef, 0x27, 0xf0, 0x62, 0xae, 0x5b, 0xe4, 0x2d, 0xee, 0xe6, 0x32, 0x92, 0x58,
	0x31, 0x8f, 0xec, 0x2d, 0x5c, 0xf7, 0x62, 0x1d, 0x22, 0xdf, 0xaa, 0x2f, 0x8f, 0xf2, 0xc2, 0xb5,
	0x19, 0x7a, 0xd3, 0x69, 0xb3, 0xe0, 0x07, 0xe9, 0x0d, 0x5e, 0x76, 0x54, 0x87, 0x89, 0x7c, 0x6f,
	0xaf, 0x01, 0x55, 0xa2, 0xa2, 0xdb, 0x98, 0x46, 0xfd, 0xd1, 0xf1, 0xec, 0x55, 0x2c, 0xdd, 0x63,
	0x23, 0xf7, 0xf0, 0xbf, 0x02, 0xbb, 0xdb, 0xeb, 0xdf, 0xff, 0x20, 0x45, 0xad, 0x8d, 0xef, 0xd3,
	0x05, 0x57, 0x30, 0x6c, 0xbe, 0xa7, 0xaa, 0x17, 0x93, 0x58, 0xdc, 0x9f, 0x46, 0xd3, 0x0a, 0x20,
	0x04, 0x4e, 0x04, 0x62, 0x62, 0x2a, 0xa5, 0x9f, 0x83, 0x6b, 0xf5, 0xcd, 0xd7, 0x24, 0xfe, 0x37,
	0x2c, 0x35, 0x05, 0x2e, 0xe1, 0xb4, 0xb0, 0x8a, 0x31, 0x8e, 0x19, 0xa9, 0xf6, 0x91, 0x37, 0xae,
	0x51, 0x3b, 0x0c, 0x19, 0xf8, 0xa5, 0x1c, 0xee, 0x79, 0xb9, 0x83, 0x73, 0xd1, 0x90, 0x4a, 0xf8,
	0x9e, 0x56, 0xf3, 0xed, 0x23, 0xd4, 0xa4, 0x6e, 0xec, 0xd5, 0x87, 0x10, 0x66, 0x7c, 0x31, 0xf9,
	0x79, 0xc9, 0x44, 0x8e, 0x5c, 0xec, 0x84, 0xc4, 0xb5, 0x98, 0xac, 0xd8, 0xbd, 0x3e, 0x35, 0xab,
	0x89, 0x50, 0xcb, 0xae, 0x06, 0xf5, 0x8f, 0x66, 0xf1, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x27,
	0x39, 0xca, 0x13, 0x49, 0x0b, 0x00, 0x00,
}
